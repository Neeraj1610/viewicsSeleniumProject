package com.myproject.basepageobject;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.WebDriverWait;

public class BasePageObject {

	public WebDriver driver;

	public BasePageObject(WebDriver driver) {

        // Set the driver
        this.driver = driver;
    }

	private void highlightElement(WebElement element)
	{
		JavascriptExecutor jsExecutor=(JavascriptExecutor) driver;

		jsExecutor.executeScript("arguments[0].setAttribute('style', 'background: yellow; border: 2px solid red;');", element);
		try {
			Thread.sleep(500);
		} catch (InterruptedException e) {

			System.out.println(e.getMessage());
		}

		jsExecutor.executeScript("arguments[0].setAttribute('style','border: solid 2px white');", element);

	}

	private void highlightElement(String xpath)
	{

		JavascriptExecutor jsExecutor=(JavascriptExecutor) driver;

		jsExecutor.executeScript("arguments[0].setAttribute('style', 'background: yellow; border: 2px solid red;');", driver.findElement(By.xpath(xpath)));
	}

	public void takeScreenShot(String destFilePath) throws IOException
	{
		TakesScreenshot takeScreenshot=(TakesScreenshot) driver;

		File srcFile=takeScreenshot.getScreenshotAs(OutputType.FILE);

		FileUtils.copyFile(srcFile, new File(destFilePath));		
	}

	public void sendKeys(WebElement element,String text)
	{
		highlightElement(element);
		element.sendKeys(text);
	}

	public void click(WebElement element)
	{
		highlightElement(element);
		element.click();
	}
	
	public boolean isElementPresent(String xpathToBeModified, String dynamicVariable) {

        // Declare modified xpath
        String modifiedXpath = xpathToBeModified;

        if (!dynamicVariable.equals("")) {
            // Replace dynamic variable(s)
            modifiedXpath = xpathToBeModified.replaceFirst("DYNAMIC_LOCATOR_VARIABLE", dynamicVariable);
        }

        // Wait for webelement to be visible
        try {
            WebDriverWait wait = new WebDriverWait(driver,30);
            wait.until(ExpectedConditions.elementToBeClickable(By.xpath(modifiedXpath)));
            LogWrapper.logInfoMsgs("Element is present");
            return true;
        } catch (Exception ex) {
            LogWrapper.logInfoMsgs("Element is not present");
            return false;
        }
}